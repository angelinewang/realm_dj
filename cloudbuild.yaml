steps:
      docker pull gcr.io/cloudsql-docker/gce-proxy:1.33.1
  - id: "docker-build"
    name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/realm-rn-dj/github.com/angelinewang/realm_dj:$COMMIT_SHA"]
    # , "gcr.io/cloudsql-docker/gce-proxy:1.33.1"

  - id: "docker-push"
    name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/realm-rn-dj/github.com/angelinewang/realm_dj:$COMMIT_SHA"]

  - id: "docker-layer"
    name: "gcr.io/cloud-builders/docker"
    entrypoint: /bin/bash
    args:
      - '-c'
      - |
        echo "FROM gcr.io/realm-rn-dj/github.com/angelinewang/realm_dj:$COMMIT_SHA
        COPY --from=gcr.io/cloudsql-docker/gce-proxy /cloud_sql_proxy /cloudsql/cloud_sql_proxy" > Dockerfile-proxy;

        docker build -f Dockerfile-proxy -t gcr.io/realm-rn-dj/github.com/angelinewang/realm_dj:$COMMIT_SHA-proxy .

  # # For TCP connections
  # - id: "migrate-tcp"
  #   name: "gcr.io/realm-rn-dj/github.com/angelinewang/realm_dj:$COMMIT_SHA-proxy"
  #   dir: sql-proxy
  #   env:
  #     - "DATABASE_NAME=${_DATABASE_NAME}"
  #     - "DATABASE_USER=${_DATABASE_USER}"
  #     - "DATABASE_HOST=127.0.0.1"
  #     - "DATABASE_PORT=${_DATABASE_PORT}"
  #     - "DATABASE_TYPE=${_DATABASE_TYPE}"
  #   secretEnv:
  #     - DATABASE_PASS
  #   entrypoint: /bin/bash
  #   args:
  #     - '-c'
  #     - |
        ./cloud_sql_proxy.exe -instances=realm-rn-dj:europe-west1:realm-django=tcp:35.195.57.236:5432
        # python migrate.py # for example

# steps:
# - name: 'gcr.io/cloud-builders/docker'
#   args: ['build', '-t', 'gcr.io/realm-rn-dj/github.com/angelinewang/realm_dj:$COMMIT_SHA', '.']#
  
#       docker pull gcr.io/cloudsql-docker/gce-proxy:1.33.1
  
# steps:
#   - id: "docker-build"
#     name: "gcr.io/cloud-builders/docker"
#     args: ["build", "-t", "${_IMAGE_NAME}", "sql-proxy/."]

#   - id: "docker-push"
#     name: "gcr.io/cloud-builders/docker"
#     args: ["push", "${_IMAGE_NAME}"]

#   - id: "docker-layer"
#     name: "gcr.io/cloud-builders/docker"
#     entrypoint: /bin/bash
#     args:
#       - '-c'
#       - |
#         echo "FROM $_IMAGE_NAME
#         COPY --from=gcr.io/cloudsql-docker/gce-proxy /cloud_sql_proxy /cloudsql/cloud_sql_proxy" > Dockerfile-proxy;

#         docker build -f Dockerfile-proxy -t ${_IMAGE_NAME}-proxy .

  # # For TCP connections
  # - id: "migrate-tcp"
  #   name: "${_IMAGE_NAME}-proxy"
  #   dir: sql-proxy
  #   env:
  #     - "DATABASE_NAME=${_DATABASE_NAME}"
  #     - "DATABASE_USER=${_DATABASE_USER}"
  #     - "DATABASE_HOST=127.0.0.1"
  #     - "DATABASE_PORT=${_DATABASE_PORT}"
  #     - "DATABASE_TYPE=${_DATABASE_TYPE}"
  #   secretEnv:
  #     - DATABASE_PASS
  #   entrypoint: /bin/bash
  #   args:
  #     - '-c'
  #     - |
  #       /cloudsql/cloud_sql_proxy -instances=${_INSTANCE_CONNECTION_NAME}=tcp:${_DATABASE_PORT} & sleep 2;
  #       python migrate.py # for example